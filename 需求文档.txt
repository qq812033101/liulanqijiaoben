# 网站自动化访问工具需求文档

## 1. 核心功能
本工具旨在提供一个图形用户界面（GUI），用于自动化地、通过代理服务器循环访问指定网站，并模拟手机浏览器环境。

## 2. GUI界面要求
使用 `ttkbootstrap` 库构建一个现代化、美观的图形界面。

### 2.1. 配置项
- **目标网站 (URL)**:
  - 类型：文本输入框。
  - 默认值：无。
  - 校验：必填项，若为空则程序不执行访问任务，并给予提示。
- **调用次数**:
  - 类型：数字输入框。
  - 默认值：100。
  - 描述：程序将执行的总访问次数。
- **调用间隔 (秒)**:
  - 类型：数字输入框。
  - 默认值：5。
  - 描述：一轮完整的访问任务（打开浏览器 -> 访问 -> 停留 -> 关闭浏览器）结束后，到下一轮任务开始前的等待时间。
- **停留时间 (秒)**:
  - 类型：数字输入框。
  - 默认值：10。
  - 描述：在目标网站页面上停留的时间。实际停留时间将在此值的 `1` 到 `设定值` 之间随机选择。例如，设置为10，则随机停留1-10秒。

### 2.2. 代理功能
- **代理导入**:
  - 功能：提供一个“导入代理”按钮，允许用户选择一个 `.txt` 文件。
  - 文件格式：每行一个代理，格式为 `代理地址:端口:账号:密码`。
  - 示例：`na.proxys5.net:6200:15782341-zone-custom-region-US-sessid-w5qDxRPn-sessTime-15:Rk3dOqxE`
- **代理列表展示**:
  - 功能：界面上需要有一个列表框，用于清晰地展示所有从文件中成功导入的代理信息。

### 2.3. 控制按钮
- **开始访问**:
  - 功能：启动自动化访问任务。
  - 状态：任务运行时，此按钮应被禁用。
- **停止访问**:
  - 功能：立即停止当前的访问任务循环。
  - 状态：任务未运行时，此按钮应被禁用。
- **代理检测**:
  - 功能：提供一个手动按钮，用于测试当前代理列表中的代理是否可用。测试逻辑与自动检测一致。

### 2.4. 信息展示
- **日志列表**:
  - 功能：一个可滚动的文本区域，用于实时显示程序的运行状态、操作日志、错误信息、当前访问进度、正在使用的代理IP等。

## 3. 执行逻辑
1.  **启动与配置**：用户在GUI中完成所有配置，并导入代理列表。
2.  **开始任务**：用户点击“开始访问”按钮。
3.  **循环访问**：程序从代理列表中按顺序取出一个代理。
4.  **代理检测**：在每次使用新代理访问前，自动检测该代理的IP及连通性。如果检测失败，则跳过此代理，记录日志，并尝试下一个。
5.  **打开浏览器**：
    - 使用检测通过的代理。
    - 配置浏览器以模拟手机模式（例如，iPhone或Android的User-Agent和屏幕尺寸）。
6.  **访问网站**：浏览器打开用户配置的“目标网站”。
7.  **随机停留**：在页面上根据用户设置的“停留时间”范围，随机停留一段时间。
8.  **关闭浏览器**：完成停留后，彻底关闭浏览器实例。
9.  **任务间隔**：等待用户设置的“调用间隔”时间。
10. **切换代理**：进入下一轮循环，使用列表中的下一个代理。
11. **任务结束**：当所有代理都使用过一遍后，整个访问任务结束，程序停止。

## 4. 技术栈
- **语言**: Python 3
- **GUI库**: ttkbootstrap
- **浏览器自动化**: Selenium
- **HTTP请求**: Requests (用于代理检测)
- **依赖管理**: requirements.txt